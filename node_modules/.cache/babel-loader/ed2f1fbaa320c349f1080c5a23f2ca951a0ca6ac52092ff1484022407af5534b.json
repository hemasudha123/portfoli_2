{"ast":null,"code":"var _jsxFileName = \"/home/sys2023/Desktop/assignment/portfoli/client/src/portfoliContainer/Home/Header/Header.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Header.css';\nimport { TOTAL_SCREEN, GET_SCREEN_INDEX } from '../../../utilities/commonUtils';\nimport ScrollService from '../../../utilities/ScrollService';\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Header() {\n  _s();\n  const [selectedScreen, setSelectedScreen] = useState(0);\n  const [showHeaderOptions, setShowHeaderOptions] = useState(false);\n  const updateCurrentScreen = currentScreen => {\n    if (!currentScreen || !currentScreen.screenInView) return;\n    let screenIndex = GET_SCREEN_INDEX(currentScreen.screenInView);\n    if (screenIndex < 0) return;\n  };\n  let currentScreenSubscription = ScrollService.currentScreenBroadCaster.subscribe(updateCurrentScreen);\n  const getHeaderOptions = () => {\n    return TOTAL_SCREEN.map((screen, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getHeaderOptionsClass(i),\n      onClick: () => switchScreen(i, screen)\n    }, screen.screen_name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this));\n  };\n  const getHeaderOptionsClass = index => {\n    let classes = \"header-option\";\n    if (index < TOTAL_SCREEN.length - 1) classes += \"header-option-seperator\";\n    if (selectedScreen === index) classes += \"selected-header-option\";\n    return;\n  };\n  const switchScreen = (index, screen) => {\n    let screenComponent = document.getElementById(screen.screen_name);\n    if (!screenComponent) return;\n    screenComponent.scrollIntoView({\n      behavior: \"smooth\"\n    });\n    setSelectedScreen(index);\n    setShowHeaderOptions(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header-container\",\n    onClick: () => setShowHeaderOptions(!showHeaderOptions),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-parent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-hamburger\",\n        onClick: () => setShowHeaderOptions(!showHeaderOptions),\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          className: \"header-hamburger-bars\",\n          icon: faBars\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-logo\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Hemasudha~\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: showHeaderOptions ? \"header-options  show-hamburger-options\" : \"header-option\",\n        children: getHeaderOptions()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(Header, \"q2MbXurkb4Gbb5Hih7vqcPgrBdM=\");\n_c = Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","TOTAL_SCREEN","GET_SCREEN_INDEX","ScrollService","faBars","FontAwesomeIcon","jsxDEV","_jsxDEV","Header","_s","selectedScreen","setSelectedScreen","showHeaderOptions","setShowHeaderOptions","updateCurrentScreen","currentScreen","screenInView","screenIndex","currentScreenSubscription","currentScreenBroadCaster","subscribe","getHeaderOptions","map","screen","i","className","getHeaderOptionsClass","onClick","switchScreen","screen_name","fileName","_jsxFileName","lineNumber","columnNumber","index","classes","length","screenComponent","document","getElementById","scrollIntoView","behavior","children","icon","_c","$RefreshReg$"],"sources":["/home/sys2023/Desktop/assignment/portfoli/client/src/portfoliContainer/Home/Header/Header.js"],"sourcesContent":["import React, { useState } from 'react'\nimport './Header.css'\nimport { TOTAL_SCREEN, GET_SCREEN_INDEX } from '../../../utilities/commonUtils';\nimport ScrollService from '../../../utilities/ScrollService';\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport default function Header() {\n    const [selectedScreen, setSelectedScreen] = useState(0);\n    const [showHeaderOptions, setShowHeaderOptions] = useState(false);\n\n    const updateCurrentScreen = (currentScreen) => {\n        if (!currentScreen || !currentScreen.screenInView)\n            return;\n        let screenIndex = GET_SCREEN_INDEX(currentScreen.screenInView)\n        if (screenIndex < 0)\n            return\n    }\n    let currentScreenSubscription = ScrollService.currentScreenBroadCaster.subscribe(updateCurrentScreen);\n    const getHeaderOptions = () => {\n        return (\n            TOTAL_SCREEN.map((screen, i) => (\n                <div key={screen.screen_name} className={getHeaderOptionsClass(i)}\n                    onClick={() => switchScreen(i, screen)}>\n                </div >\n            ))\n        )\n    }\n\n    const getHeaderOptionsClass = (index) => {\n        let classes = \"header-option\";\n        if (index < TOTAL_SCREEN.length - 1)\n            classes += \"header-option-seperator\";\n\n        if (selectedScreen === index)\n            classes += \"selected-header-option\";\n        return\n    }\n\n    const switchScreen = (index, screen) => {\n        let screenComponent = document.getElementById(screen.screen_name)\n        if (!screenComponent)\n            return;\n\n        screenComponent.scrollIntoView({ behavior: \"smooth\" });\n        setSelectedScreen(index);\n        setShowHeaderOptions(false);\n    };\n\n    return (\n        <div className='header-container' onClick={() => setShowHeaderOptions(!showHeaderOptions)}>\n            <div className='header-parent'>\n                <div className='header-hamburger' onClick={() => setShowHeaderOptions(!showHeaderOptions)}>\n                    <FontAwesomeIcon className='header-hamburger-bars' icon={faBars} />\n                </div>\n                <div className='header-logo'>\n                    <span>Hemasudha~</span>\n                </div>\n                <div className={(showHeaderOptions) ? \"header-options  show-hamburger-options\" : \"header-option\"}>\n                    {getHeaderOptions()}\n\n                </div>\n            </div>\n\n        </div>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}