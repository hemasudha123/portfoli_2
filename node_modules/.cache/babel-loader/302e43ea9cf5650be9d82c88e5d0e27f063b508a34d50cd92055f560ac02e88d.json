{"ast":null,"code":"import { TOTAL_SCREEN } from \"./commonUtils\";\nimport { Subject } from \"rxjs\";\nexport default class ScrollService {\n  constructor() {\n    this.scrollToHireMe = () => {\n      let contactMeScreen = document.getElementById(\"Contact Me\");\n      if (!contactMeScreen) return;\n      contactMeScreen.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    };\n    this.scrollToHome = () => {\n      let HomeScreen = document.getElementById(\"Home\");\n      if (!HomeScreen) return;\n      HomeScreen.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    };\n    this.isElementInView = (elem, type) => {\n      let rec = elem.getBoundingClientRect();\n      let elementTop = rec.top;\n      let elementBottom = rec.Bottom;\n      let partiallyVisible = elementTop < window.innerHeight && elementBottom >= 0;\n      let completelyVisible = elementTop >= 0 && elementBottom <= window.innerHeight;\n      switch (type) {\n        case \"partial\":\n          return partiallyVisible;\n        case \"complete\":\n          return completelyVisible;\n        default:\n          return false;\n      }\n    };\n    this.chceckCurrentScreenUnderViewport = event => {\n      if (!event || Object.keys(event).length < 1) return;\n      for (let screen of TOTAL_SCREEN) {\n        let screenFromDom = document.getElementById(screen.screen_name);\n        if (!screenFromDom) continue;\n        let fullyVisible = this.isElementInView(screenFromDom, \"complete\");\n        let partiallyVisible = this.isElementInView(screenFromDom, 'partial');\n        if (fullyVisible || partiallyVisible) {\n          if (partiallyVisible && !screen.alreadyRendered) {\n            ScrollService.currentScreenBroadCaster.next({\n              fadeInScreen: screen.screen_name\n            });\n            screen['alreadyRendered'] = true;\n            break;\n          }\n          if (fullyVisible) {\n            ScrollService.currentScreenBroadCaster.next({\n              screenInView: screen.screen_name\n            });\n            break;\n          }\n        }\n      }\n    };\n    window.addEventListener('scroll', this.chceckCurrentScreenUnderViewport);\n  }\n}\nScrollService.scrollHandler = new ScrollService();\nScrollService.currentScreenBroadCaster = new Subject();\nScrollService.currentScreenFadeIn = new Subject();","map":{"version":3,"names":["TOTAL_SCREEN","Subject","ScrollService","constructor","scrollToHireMe","contactMeScreen","document","getElementById","scrollIntoView","behavior","scrollToHome","HomeScreen","isElementInView","elem","type","rec","getBoundingClientRect","elementTop","top","elementBottom","Bottom","partiallyVisible","window","innerHeight","completelyVisible","chceckCurrentScreenUnderViewport","event","Object","keys","length","screen","screenFromDom","screen_name","fullyVisible","alreadyRendered","currentScreenBroadCaster","next","fadeInScreen","screenInView","addEventListener","scrollHandler","currentScreenFadeIn"],"sources":["/home/sys2023/Desktop/assignment/portfoli/client/src/utilities/ScrollService.js"],"sourcesContent":["import { TOTAL_SCREEN } from \"./commonUtils\";\nimport { Subject } from \"rxjs\";\n\nexport default class ScrollService {\n    static scrollHandler = new ScrollService();\n\n    static currentScreenBroadCaster = new Subject()\n    static currentScreenFadeIn = new Subject()\n\n    constructor() {\n        window.addEventListener('scroll', this.chceckCurrentScreenUnderViewport);\n    }\n    scrollToHireMe = () => {\n        let contactMeScreen = document.getElementById(\"Contact Me\")\n        if (!contactMeScreen) return;\n        contactMeScreen.scrollIntoView({ behavior: \"smooth\" })\n    }\n\n    scrollToHome = () => {\n        let HomeScreen = document.getElementById(\"Home\")\n        if (!HomeScreen) return;\n        HomeScreen.scrollIntoView({ behavior: \"smooth\" })\n    }\n\n    isElementInView = (elem, type) => {\n        let rec = elem.getBoundingClientRect();\n        let elementTop = rec.top;\n        let elementBottom = rec.Bottom;\n\n        let partiallyVisible = elementTop < window.innerHeight && elementBottom >= 0;\n        let completelyVisible = elementTop >= 0 && elementBottom <= window.innerHeight;\n\n\n        switch (type) {\n            case \"partial\":\n                return partiallyVisible;\n\n            case \"complete\":\n                return completelyVisible\n            default:\n                return false\n\n        }\n    }\n\n    chceckCurrentScreenUnderViewport = (event) => {\n        if (!event || Object.keys(event).length < 1)\n            return;\n        for (let screen of TOTAL_SCREEN) {\n            let screenFromDom = document.getElementById(screen.screen_name);\n            if (!screenFromDom)\n                continue;\n\n            let fullyVisible = this.isElementInView(screenFromDom, \"complete\");\n            let partiallyVisible = this.isElementInView(screenFromDom, 'partial');\n\n            if (fullyVisible || partiallyVisible) {\n                if (partiallyVisible && !screen.alreadyRendered) {\n                    ScrollService.currentScreenBroadCaster.next({\n                        fadeInScreen: screen.screen_name\n                    });\n                    screen['alreadyRendered'] = true;\n                    break;\n                }\n                if (fullyVisible) {\n                    ScrollService.currentScreenBroadCaster.next({\n                        screenInView: screen.screen_name,\n                    });\n                    break;\n                }\n            }\n        }\n    }\n}\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,eAAe;AAC5C,SAASC,OAAO,QAAQ,MAAM;AAE9B,eAAe,MAAMC,aAAa,CAAC;EAM/BC,WAAWA,CAAA,EAAG;IAAA,KAGdC,cAAc,GAAG,MAAM;MACnB,IAAIC,eAAe,GAAGC,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC;MAC3D,IAAI,CAACF,eAAe,EAAE;MACtBA,eAAe,CAACG,cAAc,CAAC;QAAEC,QAAQ,EAAE;MAAS,CAAC,CAAC;IAC1D,CAAC;IAAA,KAEDC,YAAY,GAAG,MAAM;MACjB,IAAIC,UAAU,GAAGL,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;MAChD,IAAI,CAACI,UAAU,EAAE;MACjBA,UAAU,CAACH,cAAc,CAAC;QAAEC,QAAQ,EAAE;MAAS,CAAC,CAAC;IACrD,CAAC;IAAA,KAEDG,eAAe,GAAG,CAACC,IAAI,EAAEC,IAAI,KAAK;MAC9B,IAAIC,GAAG,GAAGF,IAAI,CAACG,qBAAqB,CAAC,CAAC;MACtC,IAAIC,UAAU,GAAGF,GAAG,CAACG,GAAG;MACxB,IAAIC,aAAa,GAAGJ,GAAG,CAACK,MAAM;MAE9B,IAAIC,gBAAgB,GAAGJ,UAAU,GAAGK,MAAM,CAACC,WAAW,IAAIJ,aAAa,IAAI,CAAC;MAC5E,IAAIK,iBAAiB,GAAGP,UAAU,IAAI,CAAC,IAAIE,aAAa,IAAIG,MAAM,CAACC,WAAW;MAG9E,QAAQT,IAAI;QACR,KAAK,SAAS;UACV,OAAOO,gBAAgB;QAE3B,KAAK,UAAU;UACX,OAAOG,iBAAiB;QAC5B;UACI,OAAO,KAAK;MAEpB;IACJ,CAAC;IAAA,KAEDC,gCAAgC,GAAIC,KAAK,IAAK;MAC1C,IAAI,CAACA,KAAK,IAAIC,MAAM,CAACC,IAAI,CAACF,KAAK,CAAC,CAACG,MAAM,GAAG,CAAC,EACvC;MACJ,KAAK,IAAIC,MAAM,IAAI9B,YAAY,EAAE;QAC7B,IAAI+B,aAAa,GAAGzB,QAAQ,CAACC,cAAc,CAACuB,MAAM,CAACE,WAAW,CAAC;QAC/D,IAAI,CAACD,aAAa,EACd;QAEJ,IAAIE,YAAY,GAAG,IAAI,CAACrB,eAAe,CAACmB,aAAa,EAAE,UAAU,CAAC;QAClE,IAAIV,gBAAgB,GAAG,IAAI,CAACT,eAAe,CAACmB,aAAa,EAAE,SAAS,CAAC;QAErE,IAAIE,YAAY,IAAIZ,gBAAgB,EAAE;UAClC,IAAIA,gBAAgB,IAAI,CAACS,MAAM,CAACI,eAAe,EAAE;YAC7ChC,aAAa,CAACiC,wBAAwB,CAACC,IAAI,CAAC;cACxCC,YAAY,EAAEP,MAAM,CAACE;YACzB,CAAC,CAAC;YACFF,MAAM,CAAC,iBAAiB,CAAC,GAAG,IAAI;YAChC;UACJ;UACA,IAAIG,YAAY,EAAE;YACd/B,aAAa,CAACiC,wBAAwB,CAACC,IAAI,CAAC;cACxCE,YAAY,EAAER,MAAM,CAACE;YACzB,CAAC,CAAC;YACF;UACJ;QACJ;MACJ;IACJ,CAAC;IA9DGV,MAAM,CAACiB,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACd,gCAAgC,CAAC;EAC5E;AA8DJ;AAtEqBvB,aAAa,CACvBsC,aAAa,GAAG,IAAItC,aAAa,CAAC,CAAC;AADzBA,aAAa,CAGvBiC,wBAAwB,GAAG,IAAIlC,OAAO,CAAC,CAAC;AAH9BC,aAAa,CAIvBuC,mBAAmB,GAAG,IAAIxC,OAAO,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}